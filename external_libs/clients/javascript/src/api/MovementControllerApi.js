/**
 * Inventory Management System
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MovementDto', 'model/ResponseCanonicalListMovementDto', 'model/ResponseCanonicalMovementDto'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/MovementDto'), require('../model/ResponseCanonicalListMovementDto'), require('../model/ResponseCanonicalMovementDto'));
  } else {
    // Browser globals (root is window)
    if (!root.InventoryManagementSystem) {
      root.InventoryManagementSystem = {};
    }
    root.InventoryManagementSystem.MovementControllerApi = factory(root.InventoryManagementSystem.ApiClient, root.InventoryManagementSystem.MovementDto, root.InventoryManagementSystem.ResponseCanonicalListMovementDto, root.InventoryManagementSystem.ResponseCanonicalMovementDto);
  }
}(this, function(ApiClient, MovementDto, ResponseCanonicalListMovementDto, ResponseCanonicalMovementDto) {
  'use strict';

  /**
   * MovementController service.
   * @module api/MovementControllerApi
   * @version 2.0
   */

  /**
   * Constructs a new MovementControllerApi. 
   * @alias module:api/MovementControllerApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the findMovementUsingGET operation.
     * @callback module:api/MovementControllerApi~findMovementUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseCanonicalMovementDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * findMovement
     * @param {Number} movementId movementId
     * @param {module:api/MovementControllerApi~findMovementUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseCanonicalMovementDto}
     */
    this.findMovementUsingGET = function(movementId, callback) {
      var postBody = null;

      // verify the required parameter 'movementId' is set
      if (movementId === undefined || movementId === null) {
        throw new Error("Missing the required parameter 'movementId' when calling findMovementUsingGET");
      }


      var pathParams = {
        'movementId': movementId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = ResponseCanonicalMovementDto;

      return this.apiClient.callApi(
        '/movements/{movementId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateMovementUsingPOST operation.
     * @callback module:api/MovementControllerApi~generateMovementUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseCanonicalMovementDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * generateMovement
     * @param {module:model/MovementDto} movementInfo movementInfo
     * @param {module:api/MovementControllerApi~generateMovementUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseCanonicalMovementDto}
     */
    this.generateMovementUsingPOST = function(movementInfo, callback) {
      var postBody = movementInfo;

      // verify the required parameter 'movementInfo' is set
      if (movementInfo === undefined || movementInfo === null) {
        throw new Error("Missing the required parameter 'movementInfo' when calling generateMovementUsingPOST");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ResponseCanonicalMovementDto;

      return this.apiClient.callApi(
        '/movements/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listMovementsUsingGET operation.
     * @callback module:api/MovementControllerApi~listMovementsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseCanonicalListMovementDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * listMovements
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} opts.movementDetailIds 
     * @param {Array.<Number>} opts.productIds 
     * @param {Array.<Number>} opts.movementTypeIds 
     * @param {Number} opts.skip 
     * @param {Number} opts.limit 
     * @param {Date} opts.from 
     * @param {Date} opts.to 
     * @param {Number} opts.sourceRepositoryId 
     * @param {Number} opts.targetRepositoryId 
     * @param {Number} opts.customerId 
     * @param {Number} opts.supplierId 
     * @param {module:api/MovementControllerApi~listMovementsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseCanonicalListMovementDto}
     */
    this.listMovementsUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'skip': opts['skip'],
        'limit': opts['limit'],
        'from': opts['from'],
        'to': opts['to'],
        'sourceRepositoryId': opts['sourceRepositoryId'],
        'targetRepositoryId': opts['targetRepositoryId'],
        'customerId': opts['customerId'],
        'supplierId': opts['supplierId'],
      };
      var collectionQueryParams = {
        'movementDetailIds': {
          value: opts['movementDetailIds'],
          collectionFormat: 'multi'
        },
        'productIds': {
          value: opts['productIds'],
          collectionFormat: 'multi'
        },
        'movementTypeIds': {
          value: opts['movementTypeIds'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = ResponseCanonicalListMovementDto;

      return this.apiClient.callApi(
        '/movements/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the rollbackMovementUsingPUT operation.
     * @callback module:api/MovementControllerApi~rollbackMovementUsingPUTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseCanonicalMovementDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * rollbackMovement
     * @param {Number} parentMovementId parentMovementId
     * @param {module:model/MovementDto} headerInfo headerInfo
     * @param {module:api/MovementControllerApi~rollbackMovementUsingPUTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseCanonicalMovementDto}
     */
    this.rollbackMovementUsingPUT = function(parentMovementId, headerInfo, callback) {
      var postBody = headerInfo;

      // verify the required parameter 'parentMovementId' is set
      if (parentMovementId === undefined || parentMovementId === null) {
        throw new Error("Missing the required parameter 'parentMovementId' when calling rollbackMovementUsingPUT");
      }

      // verify the required parameter 'headerInfo' is set
      if (headerInfo === undefined || headerInfo === null) {
        throw new Error("Missing the required parameter 'headerInfo' when calling rollbackMovementUsingPUT");
      }


      var pathParams = {
        'parentMovementId': parentMovementId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = ResponseCanonicalMovementDto;

      return this.apiClient.callApi(
        '/movements/{parentMovementId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
